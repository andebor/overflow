pipeline:
  # Use layer cache
  restore-cache:
    image: drillster/drone-volume-cache
    restore: true
    ttl: 7
    mount:
      - /drone/docker
    volumes:
      - /tmp/drone-cache:/cache

  # Install dependencies and test the python code
  backend:
    image: plugins/docker
    group: build
    secrets:
      - docker_username
      - docker_password
      - of_secret_key
    repo: mythern/overflow-backend
    dockerfile: backend/Dockerfile
    context: backend
    auto_tag: true
    when:
      branch: master
      event: push

  # Install dependencies, build and test the typescript code
  frontend:
    image: plugins/docker
    group: build
    secrets:
      - docker_username
      - docker_password
    repo: mythern/overflow-frontend
    dockerfile: frontend/Dockerfile
    context: frontend
    auto_tag: true
    when:
      branch: master
      event: push

  # Copy compose-file
  configure:
    image: appleboy/drone-scp
    host: ace.ulv.io
    username: root
    secrets:
      - ssh_key
    target: /srv/www/overflow/
    source: docker-compose.yml
    when:
      branch: master
      event: push

  # Pull fresh images, restart, cleanup and report status
  deploy:
    image: appleboy/drone-ssh
    host: ace.ulv.io
    username: root
    secrets:
      - ssh_key
    script:
      - cd /srv/www/overflow
      - sed -i 's,backend/src/,,g' docker-compose.yml
      - docker-compose pull
      - docker-compose down
      - docker-compose up -d
      - docker image prune -f
      - docker-compose ps
    when:
      branch: master
      event: push

  # Rebuild layer cache
  rebuild-cache:
    image: drillster/drone-volume-cache
    rebuild: true
    mount:
      - /drone/docker
    volumes:
      - /tmp/drone-cache:/cache
