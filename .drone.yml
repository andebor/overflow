kind: pipeline
name: build

steps:
  # Default clone does not fetch tags
- name: fetch-tags
  image: docker:git
  commands:
    - git fetch --tags

  # Install dependencies and test the python code
- name: backend
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: mythern/overflow-backend
    dockerfile: Dockerfile.backend
    context: .
    auto_tag: true
    cache_from: mythern/overflow-backend:latest
    purge: false
  when:
    event: [push, tag]
  volumes:
    - name: docker-socket
      host:
        path: /var/run/docker.sock:/var/run/docker.sock

  # Install dependencies, build and test the typescript code
- name: frontend
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: mythern/overflow-frontend
    dockerfile: Dockerfile.frontend
    context: .
    auto_tag: true
    cache_from: mythern/overflow-frontend:latest
    purge: false
  when:
    event: [push, tag]
  volumes:
    - name: docker_socket
      host:
        path: /var/run/docker.sock:/var/run/docker.sock

  # Copy compose-file
- name: configure
  image: appleboy/drone-scp
  settings:
    host: ace.ulv.io
    username: root
    key:
      from_secret: ssh_key
    target: /srv/www/overflow/
    source: docker-compose.yml
  when:
    event: [tag]

  # Pull fresh images, restart, cleanup and report status
- name: deploy
  image: appleboy/drone-ssh
  settings:
    host: ace.ulv.io
    username: root
    key:
      from_secret: ssh_key
    script:
      - cd /srv/www/overflow
      - sed -i 's#backend/src/##g' docker-compose.yml
      - sed -i '/build:/d' docker-compose.yml
      - sed -i '/dockerfile:/d' docker-compose.yml
      - sed -i '/context:/d' docker-compose.yml
      - docker-compose pull
      - docker-compose up -d -t 60
      - docker image prune -f
  when:
    event: [tag]

